{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Loader/Loader.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","onSubmit","useState","searchPhoto","setSearchPhoto","className","event","preventDefault","trim","toast","error","type","placeholder","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","src","alt","Spinner","color","height","width","timeout","Button","onClick","ImageGallery","photos","setPhotos","loading","setLoading","page","setPage","setError","BASE_URL","KEY","useEffect","fetch","then","res","json","hits","catch","finally","Error","oldPhotos","window","scrollTo","top","document","documentElement","scrollHeight","behavior","handleModalPhoto","modalPhoto","map","hit","largeImageURL","webformatURL","id","length","oldPage","modalRoot","querySelector","Modal","largePhoto","onClose","handleKeyDown","code","addEventListener","removeEventListener","createPortal","target","App","showModal","setShowModal","setModalPhoto","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.784cf617.chunk.js","sourcesContent":["import { useState } from 'react';\nimport '../../components/styles.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchPhoto, setSearchPhoto] = useState('');\n  const handlePhotoChange = event => {\n    setSearchPhoto(event.currentTarget.value.toLowerCase());\n  };\n  const handlePhotoSubmit = event => {\n    event.preventDefault();\n    if (searchPhoto.trim() === '') {\n      toast.error('ВВЕДИТЕ КЛЮЧЕВОЕ СЛОВО ПОИСКА');\n      return;\n    }\n    onSubmit(searchPhoto);\n    setSearchPhoto('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handlePhotoSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          // autocomplete=\"off\"\n          // autofocus\n          placeholder=\"Search images and photos\"\n          value={searchPhoto}\n          onChange={handlePhotoChange}\n        />\n      </form>\n    </header>\n  );\n}\nSearchbar.propTypes = {\n  searchPhoto: PropTypes.string,\n};\n","import React from 'react';\nimport '../../components/styles.css';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ src }) => {\n  return (\n    <>\n      <img src={src} alt=\"\" className=\"ImageGalleryItem-image\" />\n    </>\n  );\n};\nexport default ImageGalleryItem;\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport '../../components/styles.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nexport default function Spinner() {\n  return (\n    <div className=\"Overlay\">\n      <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000} //3 secs\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport '../../components/styles.css';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <div className=\"buttonContainer\">\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\n        Load more\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport '../../components/styles.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Spinner from '../Loader/Loader';\nimport Button from '../Button/Button';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGallery({ searchPhoto, onClick }) {\n  const [photos, setPhotos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const BASE_URL = 'https://pixabay.com/api/';\n  const KEY = '22333452-088c943be01bb3bdea991b2c2';\n\n  useEffect(() => {\n    if (searchPhoto === '') {\n      return;\n    }\n    setPage(1);\n    setPhotos([]);\n    setLoading(true);\n    fetch(\n      `${BASE_URL}?q=${searchPhoto}&page=1&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n      .then(res => res.json())\n      .then(photos => setPhotos(photos.hits))\n      .catch(error => setError(error))\n      .finally(() => setLoading(false));\n  }, [searchPhoto]);\n\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n    setLoading(true);\n    try {\n      new Error();\n      fetch(\n        `${BASE_URL}?q=${searchPhoto}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n      )\n        .then(res => res.json())\n        .then(photos => setPhotos(oldPhotos => [...oldPhotos, ...photos.hits]))\n        .catch(error => setError(error))\n        .finally(() => {\n          setLoading(false);\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        });\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n  }, [page]);\n\n  const handleAddPage = () => {\n    setPage(oldPage => oldPage + 1);\n  };\n  const handleModalPhoto = modalPhoto => {\n    onClick(modalPhoto);\n  };\n  return (\n    <div>\n      {error && <p>Ошибка запроса по слову {searchPhoto}</p>}\n      {loading && <Spinner />}\n      {!photos && <p>Введите ключевое слово</p>}\n      {photos && (\n        <ul className=\"ImageGallery\">\n          {photos.map(hit => (\n            <li\n              className=\"ImageGalleryItem\"\n              key={hit.id}\n              onClick={() => handleModalPhoto(hit.largeImageURL)}\n            >\n              <ImageGalleryItem src={hit.webformatURL} />\n            </li>\n          ))}\n        </ul>\n      )}\n      {photos.length > 0 && <Button onClick={handleAddPage} />}\n    </div>\n  );\n}\nImageGallery.propTypes = {\n  photos: PropTypes.array,\n  loading: PropTypes.bool,\n  page: PropTypes.number,\n  error: PropTypes.any,\n  searchPhoto: PropTypes.string,\n};\n","import { useEffect } from 'react';\nimport '../../components/styles.css';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\nexport default function Modal({ largePhoto, onClose }) {\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={largePhoto} alt=\"largePhoto\" />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n","import React, { useState } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\nimport { ToastContainer } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nexport default function App() {\n  const [searchPhoto, setSearchPhoto] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalPhoto, setModalPhoto] = useState('');\n\n  const handleFormSubmit = searchPhoto => {\n    setSearchPhoto(searchPhoto);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  const handleClickPhoto = modalPhoto => {\n    setModalPhoto(modalPhoto);\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      {showModal && <Modal onClose={closeModal} largePhoto={modalPhoto} />}\n      <ToastContainer autoClose={3000} />\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery searchPhoto={searchPhoto} onClick={handleClickPhoto} />\n    </>\n  );\n}\nApp.propTypes = {\n  searchPhoto: PropTypes.string,\n  showModal: PropTypes.bool,\n  modalPhoto: PropTypes.string,\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}